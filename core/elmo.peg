package elmo

type ElmoGrammar Peg {

}

Script <- Spacing (Line)* EOT

Line <- (NewLine)? Argument (COLON)? (Argument)? ((COMMA (NewLine)?)? Argument)* (PipedOutput / EndOfLine)?

PipedOutput <- PIPE Line

EndOfLine <- PCOMMA / NewLine

Argument <- Identifier (DOT Identifier)*
           / StringLiteral
           / LongStringLiteral
           / Number
           / FunctionCall
           / Block
           / List

FunctionCall <- (LPAR Line RPAR) / ((DOLLAR/AMPERSAND) Argument (DOT Argument)*)

Block <- LCURLY (NewLine)* (Line)* RCURLY

List <- LBRACKET (NewLine)* (Argument/NewLine)? ((COMMA (NewLine)?)? Argument/NewLine)* RBRACKET


# SPACING

Spacing
   <- ( WhiteSpace
      / LongComment
      / LineComment
      )*

WhiteSpace  <- [ \t]
LongComment <- '/*' (!'*/'.)* '*/'
LineComment <- '#' (!'\n' .)*

# NEW LINE

NewLine <- ([\n\r] Spacing)+

#
# IDENTIFIERS
#

Identifier <- IdNondigit IdChar* Spacing

IdNondigit <- [a-z] / [A-Z] / [_?!]

IdChar <- [a-z] / [A-Z] / [0-9] / [_?!]


#
# STRING LITERALS
#

StringLiteral <- Quote StringChar* Quote Spacing
Quote <- ["]

StringChar <- Escape / ![\"\n\\] .

LongStringLiteral <- ( LongString Spacing)
LongString <- '`' (('``') / (!'`'.))* '`'
Escape <- '\\' (Block / .)

#
# NUMBERS
#

Number <- Numbers Spacing
Numbers <- ('-')? [0-9][0-9]* ('.' [0-9][0-9]*)?

#
# PUNCTUATORS
#

LPAR      <-  '('         Spacing
RPAR      <-  ')'         Spacing
LCURLY    <-  '{'         Spacing
RCURLY    <-  '}'         Spacing
LBRACKET  <-  '['         Spacing
RBRACKET  <-  ']'         Spacing
COMMA     <-  ','         Spacing
PCOMMA    <-  ';'         Spacing
COLON     <-  ':'         Spacing
DOT       <-  '.'         Spacing
PIPE      <-  '|'         Spacing
DOLLAR    <-  '$'         Spacing
AMPERSAND <-  '&'         Spacing
EOT       <-  !.
